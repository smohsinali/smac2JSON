# Things we set to a constant to remove them
one_hot_encoding:use_minimum_fraction {False} [False]
imputation:strategy {mean} [mean]
balancing:strategy {none} [none]
classifier:adaboost:algorithm {SAMME.R} [SAMME.R]
classifier:lda:tol {0.0001} [0.0001]
classifier:decision_tree:splitter {best} [best]
classifier:liblinear_svc:intercept_scaling {1} [1]
classifier:extra_trees:max_depth {None} [None]
classifier:extra_trees:n_estimators {100} [100]
classifier:extra_trees:min_weight_fraction_leaf {0.0} [0.0]
classifier:liblinear_svc:multi_class {ovr} [ovr]
classifier:xgradient_boosting:base_score {0.5} [0.5]
classifier:xgradient_boosting:colsample_bylevel {1} [1]
classifier:xgradient_boosting:max_delta_step {0} [0]
classifier:random_forest:max_depth {None} [None]
classifier:xgradient_boosting:scale_pos_weight {1} [1]
classifier:xgradient_boosting:gamma {0} [0]
classifier:liblinear_svc:tol {0.0001} [0.0001]
classifier:random_forest:n_estimators {100} [100]
classifier:decision_tree:max_leaf_nodes {None} [None]
classifier:liblinear_svc:dual {False} [False]
classifier:xgradient_boosting:reg_alpha {0} [0]
classifier:decision_tree:min_weight_fraction_leaf {0.0} [0.0]
classifier:decision_tree:max_features {1.0} [1.0]
classifier:sgd:fit_intercept {True} [True]
classifier:libsvm_svc:max_iter {-1} [-1]
classifier:random_forest:max_leaf_nodes {None} [None]
classifier:liblinear_svc:fit_intercept {True} [True]
classifier:random_forest:min_weight_fraction_leaf {0.0} [0.0]
classifier:xgradient_boosting:reg_lambda {1} [1]
classifier:xgradient_boosting:colsample_bytree {1} [1]
classifier:liblinear_svc:penalty {l2} [l2]
classifier:liblinear_svc:loss {squared_hinge} [squared_hinge]


rescaling:__choice__ {none, min/max, standardize, normalize} [min/max]

classifier:__choice__ {adaboost, decision_tree, extra_trees, k_nearest_neighbors, lda, liblinear_svc, libsvm_svc, qda, random_forest, sgd, xgradient_boosting} [random_forest]
classifier:decision_tree:min_samples_leaf [1, 20] [1]i
classifier:liblinear_svc:C [0.03125, 32768.0] [1.0]l

classifier:extra_trees:min_samples_leaf [1, 20] [1]i
classifier:random_forest:bootstrap {True, False} [True]
classifier:extra_trees:max_features [0.5, 5.0] [1.0]
classifier:sgd:alpha [1e-06, 0.1] [0.0001]l
classifier:lda:shrinkage {None, auto, manual} [None]
classifier:sgd:learning_rate {optimal, invscaling, constant} [optimal]
classifier:lda:n_components [1, 250] [10]i
classifier:xgradient_boosting:subsample [0.01, 1.0] [1.0]
classifier:random_forest:criterion {gini, entropy} [gini]
classifier:sgd:eta0 [1e-07, 0.1] [0.01]
classifier:decision_tree:max_depth [0.0, 2.0] [0.5]
classifier:libsvm_svc:C [0.03125, 32768.0] [1.0]l
classifier:decision_tree:criterion {gini, entropy} [gini]
classifier:libsvm_svc:kernel {rbf, poly, sigmoid} [rbf]
classifier:sgd:average {False, True} [False]
classifier:libsvm_svc:shrinking {True, False} [True]
classifier:adaboost:learning_rate [0.01, 2.0] [0.1]l
classifier:xgradient_boosting:min_child_weight [1, 20] [1]i
classifier:k_nearest_neighbors:p {1, 2} [2]
classifier:adaboost:max_depth [1, 10] [1]i
classifier:random_forest:min_samples_leaf [1, 20] [1]i
classifier:k_nearest_neighbors:weights {uniform, distance} [uniform]
classifier:random_forest:max_features [0.5, 5.0] [1.0]
classifier:sgd:loss {hinge, log, modified_huber, squared_hinge, perceptron} [log]
classifier:random_forest:min_samples_split [2, 20] [2]i
classifier:xgradient_boosting:n_estimators [50, 500] [100]i
classifier:extra_trees:bootstrap {True, False} [False]
classifier:sgd:penalty {l1, l2, elasticnet} [l2]
classifier:decision_tree:min_samples_split [2, 20] [2]i
classifier:libsvm_svc:gamma [3.0517578125e-05, 8.0] [0.1]l
classifier:extra_trees:min_samples_split [2, 20] [2]i
classifier:xgradient_boosting:learning_rate [0.01, 1.0] [0.1]l
classifier:xgradient_boosting:max_depth [1, 10] [3]i
classifier:sgd:n_iter [5, 1000] [20]il
classifier:adaboost:n_estimators [50, 500] [50]i
classifier:qda:reg_param [0.0, 10.0] [0.5]
classifier:extra_trees:criterion {gini, entropy} [gini]
classifier:libsvm_svc:tol [1e-05, 0.1] [0.0001]l
classifier:k_nearest_neighbors:n_neighbors [1, 100] [1]il


preprocessor:__choice__ {kernel_pca, no_preprocessing, pca, polynomial, select_percentile_classification} [no_preprocessing]
preprocessor:select_percentile_classification:percentile [1.0, 99.0] [50.0]
preprocessor:kernel_pca:kernel {poly, rbf, sigmoid, cosine} [rbf]
preprocessor:select_percentile_classification:score_func {chi2, f_classif} [chi2]
preprocessor:polynomial:interaction_only {False, True} [False]
preprocessor:pca:keep_variance [0.5, 0.9999] [0.9999]
preprocessor:polynomial:include_bias {True, False} [True]
preprocessor:pca:whiten {False, True} [False]
preprocessor:polynomial:degree [2, 3] [2]i
preprocessor:kernel_pca:n_components [10, 500] [100]i

preprocessor:kernel_pca:degree [2, 5] [3]i
preprocessor:kernel_pca:coef0 [-1.0, 1.0] [0.0]
preprocessor:kernel_pca:gamma [3.0517578125e-05, 8.0] [1.0]l
classifier:sgd:power_t [1e-05, 1.0] [0.25]
classifier:sgd:l1_ratio [1e-09, 1.0] [0.15]l
classifier:sgd:epsilon [1e-05, 0.1] [0.0001]l
classifier:libsvm_svc:degree [1, 5] [3]i
classifier:libsvm_svc:coef0 [-1.0, 1.0] [0.0]
classifier:lda:shrinkage_factor [0.0, 1.0] [0.5]


preprocessor:kernel_pca:n_components | preprocessor:__choice__ in {kernel_pca}
preprocessor:pca:keep_variance | preprocessor:__choice__ in {pca}
preprocessor:polynomial:interaction_only | preprocessor:__choice__ in {polynomial}
preprocessor:polynomial:include_bias | preprocessor:__choice__ in {polynomial}
preprocessor:pca:whiten | preprocessor:__choice__ in {pca}
preprocessor:select_percentile_classification:score_func | preprocessor:__choice__ in {select_percentile_classification}
preprocessor:kernel_pca:kernel | preprocessor:__choice__ in {kernel_pca}
preprocessor:select_percentile_classification:percentile | preprocessor:__choice__ in {select_percentile_classification}
preprocessor:polynomial:degree | preprocessor:__choice__ in {polynomial}
classifier:adaboost:n_estimators | classifier:__choice__ in {adaboost}
classifier:xgradient_boosting:colsample_bytree | classifier:__choice__ in {xgradient_boosting}
classifier:liblinear_svc:fit_intercept | classifier:__choice__ in {liblinear_svc}
classifier:random_forest:min_samples_split | classifier:__choice__ in {random_forest}
classifier:random_forest:max_depth | classifier:__choice__ in {random_forest}
classifier:extra_trees:min_samples_split | classifier:__choice__ in {extra_trees}
classifier:extra_trees:bootstrap | classifier:__choice__ in {extra_trees}
classifier:libsvm_svc:max_iter | classifier:__choice__ in {libsvm_svc}
classifier:liblinear_svc:penalty | classifier:__choice__ in {liblinear_svc}
classifier:libsvm_svc:shrinking | classifier:__choice__ in {libsvm_svc}
classifier:lda:n_components | classifier:__choice__ in {lda}
classifier:sgd:n_iter | classifier:__choice__ in {sgd}
classifier:k_nearest_neighbors:weights | classifier:__choice__ in {k_nearest_neighbors}
classifier:decision_tree:min_weight_fraction_leaf | classifier:__choice__ in {decision_tree}
classifier:xgradient_boosting:colsample_bylevel | classifier:__choice__ in {xgradient_boosting}
classifier:libsvm_svc:gamma | classifier:__choice__ in {libsvm_svc}
classifier:random_forest:min_weight_fraction_leaf | classifier:__choice__ in {random_forest}
classifier:xgradient_boosting:min_child_weight | classifier:__choice__ in {xgradient_boosting}
classifier:decision_tree:min_samples_leaf | classifier:__choice__ in {decision_tree}
classifier:sgd:average | classifier:__choice__ in {sgd}
classifier:random_forest:criterion | classifier:__choice__ in {random_forest}
classifier:decision_tree:max_depth | classifier:__choice__ in {decision_tree}
classifier:decision_tree:criterion | classifier:__choice__ in {decision_tree}
classifier:sgd:learning_rate | classifier:__choice__ in {sgd}
classifier:xgradient_boosting:base_score | classifier:__choice__ in {xgradient_boosting}
classifier:liblinear_svc:multi_class | classifier:__choice__ in {liblinear_svc}
classifier:random_forest:max_features | classifier:__choice__ in {random_forest}
classifier:liblinear_svc:intercept_scaling | classifier:__choice__ in {liblinear_svc}
classifier:extra_trees:min_samples_leaf | classifier:__choice__ in {extra_trees}
classifier:extra_trees:min_weight_fraction_leaf | classifier:__choice__ in {extra_trees}
classifier:libsvm_svc:kernel | classifier:__choice__ in {libsvm_svc}
classifier:decision_tree:min_samples_split | classifier:__choice__ in {decision_tree}
classifier:extra_trees:n_estimators | classifier:__choice__ in {extra_trees}
classifier:xgradient_boosting:max_delta_step | classifier:__choice__ in {xgradient_boosting}
classifier:sgd:eta0 | classifier:__choice__ in {sgd}
classifier:random_forest:min_samples_leaf | classifier:__choice__ in {random_forest}
classifier:liblinear_svc:C | classifier:__choice__ in {liblinear_svc}
classifier:lda:tol | classifier:__choice__ in {lda}
classifier:k_nearest_neighbors:n_neighbors | classifier:__choice__ in {k_nearest_neighbors}
classifier:random_forest:bootstrap | classifier:__choice__ in {random_forest}
classifier:sgd:penalty | classifier:__choice__ in {sgd}
classifier:xgradient_boosting:max_depth | classifier:__choice__ in {xgradient_boosting}
classifier:liblinear_svc:loss | classifier:__choice__ in {liblinear_svc}
classifier:decision_tree:splitter | classifier:__choice__ in {decision_tree}
classifier:xgradient_boosting:subsample | classifier:__choice__ in {xgradient_boosting}
classifier:decision_tree:max_leaf_nodes | classifier:__choice__ in {decision_tree}
classifier:decision_tree:max_features | classifier:__choice__ in {decision_tree}
classifier:sgd:alpha | classifier:__choice__ in {sgd}
classifier:xgradient_boosting:reg_alpha | classifier:__choice__ in {xgradient_boosting}
classifier:liblinear_svc:tol | classifier:__choice__ in {liblinear_svc}
classifier:libsvm_svc:tol | classifier:__choice__ in {libsvm_svc}
classifier:k_nearest_neighbors:p | classifier:__choice__ in {k_nearest_neighbors}
classifier:sgd:fit_intercept | classifier:__choice__ in {sgd}
classifier:lda:shrinkage | classifier:__choice__ in {lda}
classifier:extra_trees:max_depth | classifier:__choice__ in {extra_trees}
classifier:random_forest:max_leaf_nodes | classifier:__choice__ in {random_forest}
classifier:xgradient_boosting:scale_pos_weight | classifier:__choice__ in {xgradient_boosting}
classifier:extra_trees:max_features | classifier:__choice__ in {extra_trees}
classifier:xgradient_boosting:reg_lambda | classifier:__choice__ in {xgradient_boosting}
classifier:libsvm_svc:C | classifier:__choice__ in {libsvm_svc}
classifier:liblinear_svc:dual | classifier:__choice__ in {liblinear_svc}
classifier:sgd:loss | classifier:__choice__ in {sgd}
classifier:adaboost:max_depth | classifier:__choice__ in {adaboost}
classifier:extra_trees:criterion | classifier:__choice__ in {extra_trees}
classifier:xgradient_boosting:gamma | classifier:__choice__ in {xgradient_boosting}
classifier:random_forest:n_estimators | classifier:__choice__ in {random_forest}
classifier:adaboost:learning_rate | classifier:__choice__ in {adaboost}
classifier:qda:reg_param | classifier:__choice__ in {qda}
classifier:adaboost:algorithm | classifier:__choice__ in {adaboost}
classifier:xgradient_boosting:n_estimators | classifier:__choice__ in {xgradient_boosting}
classifier:xgradient_boosting:learning_rate | classifier:__choice__ in {xgradient_boosting}
classifier:lda:shrinkage_factor | classifier:lda:shrinkage in {manual}
classifier:sgd:power_t | classifier:sgd:learning_rate in {invscaling}
classifier:libsvm_svc:degree | classifier:libsvm_svc:kernel in {poly}
classifier:libsvm_svc:coef0 | classifier:libsvm_svc:kernel in {poly, sigmoid}
classifier:sgd:epsilon | classifier:sgd:loss in {modified_huber}
classifier:sgd:l1_ratio | classifier:sgd:penalty in {elasticnet}
preprocessor:kernel_pca:degree | preprocessor:kernel_pca:kernel in {poly}
preprocessor:kernel_pca:gamma | preprocessor:kernel_pca:kernel in {poly, rbf}
preprocessor:kernel_pca:coef0 | preprocessor:kernel_pca:kernel in {poly, sigmoid}
